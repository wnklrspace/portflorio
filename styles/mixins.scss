@import './variables.scss';

// Mediaquery mixins
@mixin x-small() {
	@media only screen and (min-width: map-get($grid-breakpoints, xs)) {
		@content;
	}
}

@mixin small() {
	@media only screen and (min-width: map-get($grid-breakpoints, sm)) {
		@content;
	}
}

@mixin medium() {
	@media only screen and (min-width: map-get($grid-breakpoints, md)) {
		@content;
	}
}

@mixin large() {
	@media only screen and (min-width: map-get($grid-breakpoints, lg)) {
		@content;
	}
}

@mixin x-large() {
	@media only screen and (min-width: map-get($grid-breakpoints, xl)) {
		@content;
	}
}

//
// Typography mixins
//

@mixin type-s {
	font-size: $font-size-sm;
	line-height: 1.4em;
}

@mixin type-m {
	font-size: $font-size-md;
	line-height: 1.4em;
}

@mixin type-l {
	font-size: $font-size-lg;
	line-height: 1.1em;
}

@mixin type-xl {
	font-size: $font-size-xl;
	line-height: 1.1em;
}

@mixin type-xxl {
	font-size: $font-size-xxl;
	line-height: 1.1em;
}

//
// Buttons
//
// Mixin for button with arrow
//
@mixin button-arrow {
	@include type-arrow;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	padding: 0 gap(2.4);
	height: $form-height;
	border-radius: $border-radius-button;
	font-family: $font-family-medium;
	transition: all $transition-default;
	cursor: pointer;

	&__arrow-container {
		width: 45px;

		@include x-large {
			width: 65px;
		}
	}

	&__arrow {
		width: 25px;
		height: 1px;
		background-color: $color-white;
		margin-right: gap(1);
		position: relative;
		transition: all 0.3s ease;

		@include x-large {
			width: 40px;
			margin-right: gap(2);
		}

		&::after,
		&::before {
			content: '';
			position: absolute;
			width: 10px;
			height: 1px;
			right: -1px;
			transition: all $transition-default;
			background-color: $color-white;
		}

		&::after {
			transform: rotate(45deg);
			bottom: 4px;
		}

		&::before {
			transform: rotate(-45deg);
			bottom: -4px;
		}
	}

	&:hover {
		color: $color-white;

		.btn__arrow {
			background-color: $color-white;
			width: 35px;

			@include x-large {
				width: 50px;
			}

			&::after,
			&::before {
				background-color: $color-white;
			}
		}
	}

	&:not(:first-of-type) {
		margin-left: gap(2);
	}

	&--outline {
		background-color: transparent;
		color: $color-grey-darkest;
		border: $button-outline-width solid;

		&--dark {
			background-color: transparent;
			color: $color-grey-darkest;

			.btn__arrow {
				background-color: $color-black;

				&::after,
				&::before {
					background-color: $color-black;
				}
			}

			&:hover {
				color: $color-white;
				background-color: $color-grey-darkest;
				border-color: $color-grey-darkest;

				.btn__arrow {
					background-color: $color-white;

					&::after,
					&::before {
						background-color: $color-white;
					}
				}
			}
		}

		&--light {
			background-color: transparent;
			color: $color-white;

			.btn__arrow {
				background-color: $color-white;

				&::after,
				&::before {
					background-color: $color-white;
				}
			}

			&:hover {
				color: $color-grey-darkest;
				background-color: $color-white;
				border-color: $color-white;

				.btn__arrow {
					background-color: $color-black;

					&::after,
					&::before {
						background-color: $color-black;
					}
				}
			}
		}
	}

	&--dark {
		background-color: $color-grey-darkest;
		color: $color-white;
	}

	&--light {
		background-color: $color-white;
		color: $color-grey-darkest;
	}
}

@mixin arrow-lg {
	width: 60px;
	height: 1px;
	background-color: $color-black;
	transition: all $transition-default;
	transform-origin: left;
	position: relative;

	@include medium {
		width: 120px;
	}

	&::after,
	&::before {
		content: '';
		position: absolute;
		width: 20px;
		height: 1px;
		background-color: $color-black;
		right: -3px;
		transition: all $transition-default;

		@include medium {
			width: 40px;
			right: -6px;
		}
	}

	&::after {
		transform: rotate(45deg);
		bottom: 7px;

		@include medium {
			bottom: 14px;
		}
	}

	&::before {
		transform: rotate(-45deg);
		bottom: -7px;

		@include medium {
			bottom: -14px;
		}
	}
}

// logo horizontal
@mixin logo-wrapper {
	position: relative;
	display: block;
}

// logo image mobile
@mixin logo-img-mobile {
	line-height: 0;
	display: inline-block;
	max-height: 26px;

	&__img {
		width: 170px;

		@include medium {
			width: 300px;
		}

		@include large {
			width: 200px;
		}
	}
}
